@startuml Sequenzdiagramm_Prometheus _EC2
actor Benutzer
participant "AWS EC2" as EC2
participant "Git Repository" as Git
participant "Script (IP Config)" as Script
participant "Prometheus RDS Exporter" as Exporter
participant "Podman" as Podman

Benutzer -> EC2: Erstellen der EC2-Instanz
EC2 -> Git: Klonen des Git Repos
Git -> Script: Start Scripts IP Config Prometheus
Script -> Exporter:  Download und Install RDS Exporter
Exporter -> Podman: Starten Podman Compose für Prometheus
@enduml

@startuml oltp_to_olap
participant "WMS (Online Transaction Processing)" as WMS
participant "ETL (Extract, Transform, Load)" as ETL
participant "DWH (Online Analytical Processing)" as DWH

WMS -> ETL:
ETL -> DWH:
@enduml

@startuml Sequenzdiagramm_Deployment
actor Benutzer
participant "create_rds_instances.py" as RDS
participant "import_dum-wms.py" as WMS
participant "create_iam_role.py" as Role
participant "create_iam_policy.py" as Policy
participant "create_iam_instances_profile.py" as Profile
participant "create_ec2_instances_prometheus_rds_exporter.py" as EC2

Benutzer -> RDS: Erstellen RDS Instance
RDS -> WMS: Import WMS Dump
WMS -> Role: Erstellen IAM Role
Role -> Policy:  Erstellen IAM Policy, Anhängen an Role
Policy -> Profile: Estellen IAM Instance Profile, Anhängen an 
Profile -> EC2: Erstellen EC2 Instance, starten Prometheus
@enduml

@startuml Grafan
participant "Grafana Image" as Image
participant "Grafana Container" as Container
participant "Grafana Dashboard" as Dashboard
participant "Grafana Datasource" as Datasource

Image -> Container: Downlaod Grafan Image von Docker Hub
Container -> Dashboard: Starten des Grafana Container
Dashboard --> Datasource: Import Prometheus Datasource
@enduml